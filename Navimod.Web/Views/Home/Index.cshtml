@model Quote
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<form asp-controller="Quote" asp-action="Create" method="post">
    <div class="container bg-cnt-colour">
        <div class="row row-one">
            <div class="col sm-6">
                <label class="text-info">How Would you like to ship?<i class="fas fa-info-circle" data-toggle="tooltip" title="How Would you like to ship"></i></label>
                <div class="row">
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.Mode, htmlAttributes: new { @class = "control-label text-muted small" })
                        <select class="custom-select " asp-for="Mode" asp-items="Model.ModeList"></select>
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.MovementType, htmlAttributes: new { @class = "control-label text-muted small" })
                        <select class="custom-select" asp-for="MovementType" asp-items="Model.MovementTypeList"></select>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <label class="text-info">Do you preffered incoterm?<i class="fas fa-info-circle" data-toggle="tooltip" title="Do you preffered incoterm"></i></label>
                <div class="row">
                    <div class="col-sm-12">
                        @Html.LabelFor(model => model.Incoterm, htmlAttributes: new { @class = "control-label text-muted small" })
                        <select class="custom-select" asp-for="Incoterm" asp-items="Model.IncotermList"></select>
                    </div>
                </div>
            </div>
        </div>
        <!--2.form group-->
        <div class="row row-one">
            <div class="col-sm-6">
                <label class="text-info">Where are you shipping from?<i class="fas fa-info-circle"  data-toggle="tooltip" title="Where are you shipping from"></i></label>
                <div class="row">
                    <div class="form-group col-sm-6">
                        @Html.LabelFor(model => model.OriginCountry, htmlAttributes: new { @class = "control-label text-muted small" })
                        @Html.EditorFor(model => model.OriginCountry, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OriginCountry, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-sm-6">
                        @Html.LabelFor(model => model.OriginCity, htmlAttributes: new { @class = "control-label text-muted small" })
                        @Html.EditorFor(model => model.OriginCity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OriginCity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <label class="text-info">Where are you shipping to ?<i class="fas fa-info-circle"  data-toggle="tooltip" title="Where are you shipping to"></i></label>
                <div class="row">
                    <div class="form-group col-sm-6">
                        @Html.LabelFor(model => model.DestinationCountry, htmlAttributes: new { @class = "control-label text-muted small" })
                        @Html.EditorFor(model => model.DestinationCountry, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DestinationCountry, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-sm-4">
                        @Html.LabelFor(model => model.DestinationCity, htmlAttributes: new { @class = "control-label text-muted small" })
                        @Html.EditorFor(model => model.DestinationCity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DestinationCity, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-sm-2">
                        @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label text-muted small" })
                        @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <!--2.form group-->
        <div class="row row-one">
            <div class="col-sm-12">
                <label class="text-info">What are you shipping?<i class="fas fa-info-circle"  data-toggle="tooltip" title="What are you shipping"></i></label>
                <div class="row">
                    <div class="form-group col-sm-2">
                        @Html.LabelFor(model => model.PackageType, htmlAttributes: new { @class = "control-label text-muted small" })
                        <select class="custom-select " asp-for="PackageType" asp-items="Model.PackageTypeList"></select>
                    </div>
                    <div class="form-group col-sm-1">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label text-muted small" })
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-sm-1">
                        @Html.LabelFor(model => model.Lenght, htmlAttributes: new { @class = "control-label text-muted small" })
                        @Html.EditorFor(model => model.Lenght, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Lenght, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-sm-1">
                        @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label text-muted small" })
                        @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-sm-1">
                        @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label text-muted small" })
                        @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-sm-1">
                        @Html.LabelFor(model => model.UnitHeight, htmlAttributes: new { @class = "control-label text-muted small" })
                        <select class="custom-select " asp-for="UnitHeight" asp-items="Model.UnitHeightList"></select>
                    </div>
                    <div class="form-group col-sm-1">
                        @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label text-muted small" })
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-sm-1">
                        @Html.LabelFor(model => model.UnitWeight, htmlAttributes: new { @class = "control-label text-muted small" })
                        <select class="custom-select " asp-for="UnitWeight" asp-items="Model.UnitWeightList"></select>
                    </div>
                    <div class="form-group col-sm-3">
                        @Html.LabelFor(model => model.CargoDescription, htmlAttributes: new { @class = "control-label text-muted small" })
                        @Html.EditorFor(model => model.CargoDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CargoDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <!--3.form group-->
        <div class="row row-one">
            <div class="col-sm-12">
                <div class="row">
                    <div class="form-check col-sm-1 ">
                        @Html.CheckBoxFor(model => model.IsHazardous)
                        @Html.LabelFor(model => model.IsHazardous, new { @class = "control-label text-muted small" })
                    </div>
                    <div class="form-check col-sm-1">
                        @Html.CheckBoxFor(model => model.IsEventCargo)
                        @Html.LabelFor(model => model.IsEventCargo, new { @class = "control-label text-muted small" })
                    </div>
                    <div class="form-check col-sm-1">
                        @Html.CheckBoxFor(model => model.IsPersonalGoods)
                        @Html.LabelFor(model => model.IsPersonalGoods, new { @class = "control-label text-muted small" })
                    </div>
                    <div class="form-group col-sm-3">
                        @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label text-muted small" })
                        <select class="custom-select " asp-for="Currency" asp-items="Model.CurrencyList"></select>
                    </div>
                    <div class="form-check col-sm-6">
                        <button type="submit" class="btn btn-primary btn-lg">Get Quote</button>
                    </div>
                </div>
            </div>
        </div>
        <div>
            @Html.ActionLink("Back to List", "List")
        </div>
</form>